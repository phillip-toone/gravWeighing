<?xml version="1.0"?>
<doc>
<assembly>
<name>
OSHAWeighing
</name>
</assembly>
<members>
<member name="M:OSHA_Weighing.Epson.EpsonArm.GoToPoint(OSHA_Weighing.Point4D)">
	<summary>
 Moves the Epson arm to the 4-coordinate point
 </summary>
	<param name="point">4 coordinate point to move to.</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.FileIO.CreateDataFileFolders(System.String@)">
	<summary>
 If the application data folder does not exist it creates it and copies all files in the application startup path with the extension of '.kem' to the data folder.
 </summary>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.FileIO.WriteTextFile(System.String,System.String@,System.Boolean,System.Boolean)">
	<summary>
 Writes a string to a text file with the extension .txt
 </summary>
	<param name="filepath">The fully qualified file path.</param>
	<param name="text">The text string to write.</param>
	<param name="overWrite">Overwrite the file with the new string if the file exists.</param>
	<param name="Append">Append the new string to the existing file.</param>
	<returns>Returns True of False depending on successful completion of the task</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.FileIO.ReadTextFile(System.String)">
	<summary>
 Reads and returns the content of a file on disk
 </summary>
	<param name="path">The fully qualified path name of the file</param>
	<returns>The text in the file.  If the file does not exist, it returns nothing</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.FileIO.GetFileName(System.Boolean,System.String,System.Boolean)">
	<summary>
 Either returns the fully qualified file name of an existing or a new file
 </summary>
	<param name="mustExist">If the file MustExist, it only returns the name of an existing file.  If not, then it only returns the name of a new file.</param>
	<returns>Fully qualified file path.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.FileIO.GetDataTitles(System.String)">
	<summary>
 This function returns the names for the input file that contain the qualifier passed to the function
 </summary>
	<param name="filepath">The full file path to the data file</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.FileIO.GetDataBlock(System.String,System.String)">
	<summary>
 This function returns the entire block of data from one qualifer to the next qualifer.
 It also returns the datablock name following the qualifer.
 </summary>
	<param name="dataName">Method data qualifer text</param>
	<param name="filepath">Full file path to the file</param>
	<returns>Associated data, includeing the method name, in a collection</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.FileIO.DeleteDataBlock(System.String,System.String)">
	<summary>
 Deletes the block of data specifed from the data file
 </summary>
	<param name="dataName">Title fo the block to delete</param>
	<param name="filepath">Full file path</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.FileIO.WriteDataBlock(System.String[]@,System.String)">
	<summary>
 Writes the data passed to data block file.   This sub appends CrLf to the end of each line
 </summary>
	<param name="data">Data as a string array</param>
	<param name="filepath">Full file path</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.DGVSupport.ReturnTable(System.String,System.String)">
	<summary>
 Returns the cell content of the specified DGV table, recalled from a text file
 </summary>
	<param name="filepath">Fully qualified file path to the data file</param>
	<param name="identifier">Name of the identifier for the method.
 If an identifer is not specifed, a list of all available methods is displayed for the user to select from.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.DGVSupport.PopulateTable(System.Windows.Forms.DataGridView@,System.String,System.String)">
	<summary>
 Populates the cells of the passed table with the data in the specifed method.
 </summary>
	<param name="thisDGV">Reference to the table to populate.</param>
	<param name="filepath">Fully qualified path to the data file.</param>
	<param name="identifier">Optional method name.  If not supplied, the function displays a list of methods
 contained in the method file.</param>
	<returns>True if the method was found and the data was loaded properly.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.DGVSupport.SaveTable(System.Windows.Forms.DataGridView@,System.String,System.String,System.Boolean)">
	<summary>
 Saves data from the specifed DGV table to a text file in a format the supports the other DGVSupport functions.
 </summary>
	<param name="table">A reference to that table containing the data to save.</param>
	<param name="filepath">A fully qualified file path.  If the file doesn't exist, it is created.</param>
	<param name="identifier">A string identifier for the saved data.</param>
	<param name="overRideNotice">Optionally, if data with the passed identifer is found, a message box appears to
 verify if the old data shoudl be overwritten with the new data.</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.DGVSupport.GetTableNames(System.String)">
	<summary>
 Returns a list of all the method identifier contained in the file.   File must be created by DGVSupport functions
 </summary>
	<param name="fullpath">A fully qualified file name with complete path</param>
	<remarks>Only file created by the DGVSupport fuctions can be accessed using this function</remarks>
</member><member name="M:OSHA_Weighing.DGVSupport.DisplayTableNames(System.String)">
	<summary>
 Displays all the method identifiers contained in the file
 </summary>
	<param name="filepath">Fully qualifed file path</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.DGVSupport.SizeTable(System.Windows.Forms.DataGridView@,System.Int32,System.Int32)">
	<summary>
 Sizes the DGV table to fit the height and width of the data in the table
 </summary>
	<param name="myDGV">A reference to the DGV table to be resized</param>
	<param name="rowsDisplayed">The number of rows to fit in the resized table</param>
	<param name="colsDisplayed">The number of columns to fit in the resized table</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.DGVSupport.GetSize(System.Windows.Forms.DataGridView@,System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Returns the size of the DGV table
 </summary>
	<param name="myDGV">Reference to the DGV table</param>
	<param name="startingRow">Row to start from in the calculation</param>
	<param name="endingRow">Row to end with in the calculation</param>
	<param name="startingColumn">Column to start with in the calculation</param>
	<param name="endingColumn">Column to end with in the calculation</param>
	<returns>Returns the size of the table</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.DGVSupport.ClearAllCells(System.Windows.Forms.DataGridView@)">
	<summary>
 Clears the value of every cell in the table and sets its value to nothing
 </summary>
	<param name="myDGV">Referecne to the DataGridView Table to Operate on.</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.DGVSupport.SetCellColor(System.Windows.Forms.DataGridView@,System.Int32,System.Int32,System.Drawing.Color)">
	<summary>
 Sets the referenced table cell to the specified color
 </summary>
	<param name="myDGV">Reference to the table to operate on</param>
	<param name="row">Table Row</param>
	<param name="col">Table column</param>
	<param name="mycolor">Color of cell</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.DGVSupport.SetRowBackColor(System.Windows.Forms.DataGridView@,System.Int32,System.Drawing.Color)">
	<summary>
 Sets the backcolor to the color specified
 </summary>
	<param name="myDGV">Reference to the DGV table to operate on</param>
	<param name="myRow">Row of the table to operate on.  Rows are 0 based.</param>
	<param name="myColor">Color to set</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.OvenDef.GotoSafeOpenDoorPosition(System.Int32)">
	<summary>
 Moves the arm to a deck position where it is safe to open the door
 </summary>
	<param name="position">Oven array element.  Range: 1-5</param>
	<remarks>A value of 0 will position the are at a safe point for oven 1</remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.OvenDef.PutFilter(System.Int32,System.Int32)">
	<summary>
 Places a filter in the oven.  Transitions the arm to a coordinate that is safe to move to any oven.
 </summary>
	<param name="ovenNum">Oven Number.   Range: 1-5.</param>
	<param name="pos">Rack position in the oven to place the filter.  Range: 1-96.</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.OvenDef.GetFilter(System.Int32,System.Int32)">
	<summary>
 Retreaves a filter from the oven.
 </summary>
	<param name="ovenNum">Oven number.   Range: 1-5.</param>
	<param name="pos">Positon to get the filter from.  Range: 1-96.</param>
	<returns>True if successful.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.OvenDef.MoveRight(OSHA_Weighing.Point4D,System.Double)">
	<summary>
 This function moves the arm to the right of its current postion by the passed amount.
 "Right" is from the persepctive of looking directly into the oven rack.  It adjusts only the X and Y coordinates.
 </summary>
	<param name="amount">The number of millimeters to move.</param>
	<returns>A 4D point to move to.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.OvenDef.MoveLeft(OSHA_Weighing.Point4D,System.Double)">
	<summary>
 This function moves the arm to the left of its current postion by the passed amount.
 "Left" is from the persepctive of looking directly into the oven rack.  It adjusts only the X and Y coordinates.
 </summary>
	<param name="amount">The number of millimeters to move.</param>
	<returns>A 4D point to move to.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.OvenDef.MoveIn(OSHA_Weighing.Point4D,System.Double)">
	<summary>
 Moves the arm into the oven by the amount specifed in millimeters.
 </summary>
	<param name="point">The starting point of the move.</param>
	<param name="amount">The number of millimeters to move the arm into the oven.</param>
	<returns>The end point of the move.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.OvenDef.MoveOut(OSHA_Weighing.Point4D,System.Double)">
	<summary>
 Moves the arm out the oven by the amount specifed in millimeters.
 </summary>
	<param name="point">The starting point of the move.</param>
	<param name="amount">The number of millimeters to move the arm oiut of the oven.</param>
	<returns>The end point of the move.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.OvenDef.OpenDoor">
	<summary>
 Opens the oven door.
 </summary>
	<returns>True when the door is fully open, or False if the door does not open in 60 seconds.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.OvenDef.CloseDoor(System.Boolean)">
	<summary>
 Closes the vacuum oven door.
 </summary>
	<param name="returnWithoutConfirmation">If set to True, the function returns without confirmation that the door completed it's close motion.
 A value of False waits until the door is confirmed closed.</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.OvenDef.Init(System.Boolean)">
	<summary>
 Tests communications with the ovens and closes the door if it is open
 </summary>
	<param name="doorsAreClosed">It takes 15 seconds to close the door.  If you know the door is closed and don't want this delay, set this parameter to True.</param>
	<returns>True if communcations was opened, False otherwise.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.GripperDef.ReadSensor">
	<summary>
 Returns the ADC valve from a single read of the gripper finger sensor. 
 </summary>
	<returns>Returns the ADC valve from the finger sensors.  Range: 0-1023.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.GripperDef.ReadSensorAverage(System.Int32)">
	<summary>
 Returns the averaged value from the grippers analog sensor.
 </summary>
	<param name="reads">The number of reads to average.</param>
	<returns>The averaged ADC reading from the grippers sensor.  Range: 0-1023.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.CaroselDef.SetHoldingCurrent(System.Int32)">
	<summary>
 This sets the holding current to 0.5 amps.  Set to high current when you are acessign the rack
 </summary>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.CaroselDef.ReleaseMotor">
	<summary>
 Turns off all holding current in the motor driver
 </summary>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.CaroselDef.GetFilter(System.Int32,System.Int32)">
	<summary>
 Picks up a filter from the carosel.
 </summary>
	<param name="rack">Carosel rack.  Range: 1-5</param>
	<param name="cell">Filter position.  Range: 1-96.</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.CaroselDef.PutFilter(System.Int32,System.Int32)">
	<summary>
 Places the filter in the carosel rack.  Takes the arm to a safe position for access.
 </summary>
	<param name="rack">Carosel rack.  Range: 1-5.</param>
	<param name="cell">The cell in the rack to go to.  Range: 1-96.</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.CaroselDef.MoveRight(System.Int32,OSHA_Weighing.Point4D,System.Double)">
	<summary>
 Moves the arm to the right by the specifed amount.  It adjusts only the X and Y coordinates.
 </summary>
	<param name="rack">Rack number, 1-5.</param>
	<param name="point">Current coordinate to adjust.</param>
	<param name="amount">Amount to move to the right from the corrent coordinate, in millimeters.</param>
	<returns>New point coordiante.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.CaroselDef.MoveIn(System.Int32,OSHA_Weighing.Point4D,System.Double)">
	<summary>
 Moves the arm into the oven by the amount specifed in millimeters.
 </summary>
	<param name="rack">Rack number, 1-5.</param>
	<param name="point">The starting point of the move.</param>
	<param name="amount">The number of millimeters to move the arm into the oven.</param>
	<returns>The end point of the move.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.CaroselDef.MoveOut(System.Int32,OSHA_Weighing.Point4D,System.Double)">
	<summary>
 Moves the arm out the oven by the amount specifed in millimeters.
 </summary>
	<param name="rack">Rack number, 1-5.</param>
	<param name="point">The starting point of the move.</param>
	<param name="amount">The number of millimeters to move the arm oiut of the oven.</param>
	<returns>The end point of the move.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.BarCodeDef.GoToReader">
	<summary>
 Moves a filter to the scanner position.
 </summary>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.XP6_BalanceDef.Send(System.String)">
	<summary>
 Sends commands to Mettler balances.
 </summary>
	<param name="myCommand">The literal string command.  Do not include line terminators.</param>
	<returns>The reply from the balance as a string</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.XP6_BalanceDef.DropOffFilter">
	<summary>
 Drops off the filter in the balance.  This routein assumes that the filters starting location is the barcode reader
 </summary>
	<returns>Returns True if the filter was dropped off properly, otherwise False</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.XP6_BalanceDef.PickUpFilter">
	<summary>
 Picks up the filter from the balance and takes it to a safe position
 </summary>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.XP6_BalanceDef.ExtractWeight(System.String)">
	<summary>
 Subfunction accessed by all Weight commands
 </summary>
	<param name="data">The reply string from the weight command</param>
	<returns>Weight as a string or Nothing or Error</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.XP6_BalanceDef.Weight">
	<summary>
 Returns a stable weight from the balance in the currenly selected units.
 </summary>
	<returns>Weight of sample or the error message of "ERROR".</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.XP6_BalanceDef.WeightImmediately">
	<summary>
 Returns the current weight from the balance, even if it is not a stable weight, in the currenly selected units.
 </summary>
	<returns>Weight of sample.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.MT5_BalanceDef.DropOffFilter">
	<summary>
 Drops off the filter in the balance.  This routein assumes that the filters starting location is the barcode reader
 </summary>
	<returns>Returns True if the filter was dropped off properly, otherwise False</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.MT5_BalanceDef.PickUpFilter">
	<summary>
 Picks up the filter from the balance and takes it to a safe position
 </summary>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.MT5_BalanceDef.ExtractWeight(System.String)">
	<summary>
 Subfunction accessed by all Weight commands
 </summary>
	<param name="data">The reply string from the weight command</param>
	<returns>Weight as a string or Nothing or Error</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.MT5_BalanceDef.Weight">
	<summary>
 Returns a stable weight from the balance in the currenly selected units.
 </summary>
	<returns>Weight of sample or the error message of "ERROR".</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.MT5_BalanceDef.WeightImmediately">
	<summary>
 Returns the current weight from the balance, even if it is not a stable weight, in the currenly selected units.
 </summary>
	<returns>Weight of sample.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.MX5_BalanceDef.DropOffFilter">
	<summary>
 Drops off the filter in the balance.  This routein assumes that the filters starting location is the barcode reader
 </summary>
	<returns>Returns True if the filter was dropped off properly, otherwise False</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.MX5_BalanceDef.PickUpFilter">
	<summary>
 Picks up the filter from the balance and takes it to a safe position
 </summary>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.MX5_BalanceDef.ExtractWeight(System.String)">
	<summary>
 Subfunction accessed by all Weight commands
 </summary>
	<param name="data">The reply string from the weight command</param>
	<returns>Weight as a string or Nothing or Error</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.MX5_BalanceDef.Weight">
	<summary>
 Returns a stable weight from the balance in the currenly selected units.
 </summary>
	<returns>Weight of sample or the error message of "ERROR".</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.MX5_BalanceDef.WeightImmediately">
	<summary>
 Returns the current weight from the balance, even if it is not a stable weight, in the currenly selected units.
 </summary>
	<returns>Weight of sample.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.JkemMotorDef.Send(System.String)">
	<summary>
 Sends the provided command and formats the reply.
 </summary>
	<param name="myCommand">The literal string command.  Do not include a terminating '\r'</param>
	<returns>The reply from the module as a string.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.JkemMotorDef.SendLiteral(System.String)">
	<summary>
 Sends the literal command.  Do not include any terminating charactors such as Cr or Lf
 </summary>
	<param name="command">Literal command string</param>
	<returns>Controller reply</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.JkemMotorDef.Move(System.Double,System.Boolean)">
	<summary>
 Performs an axis move to the absolute coordinate immediately.
 </summary>
	<param name="Position">Absolute position to move to.</param>
	<param name="returnOnMotionComplete">Return after the motor completes its motion.</param>
	<remarks></remarks>
</member><member name="P:OSHA_Weighing.ModuleDefinitions.JkemMotorDef.Position">
	<summary>
 Returns the position of the axis in units of steps.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.JkemMotorDef.SetOutput(System.Int32,OSHA_Weighing.DriverState)">
	<summary>
 Sets the state of the specified digital output.  
 </summary>
	<param name="output">Digial output.  Range: 1 to 3.</param>
	<param name="state">Enertized or Deentegized</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.JkemMotorDef.GetInput(System.Int32)">
	<summary>
 Returns the state of the specified digital input.
 </summary>
	<param name="input"></param>
	<returns>Input state as High or Low.</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.JkemMotorDef.ClearStatus">
	<summary>
 Clears the status word in the driver
 </summary>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.JkemMotorDef.SaveDriverSettings">
	<summary>
 Global command to all drivers to save the current driver settings to EEPROM.
 Valuse are recalled on powerup or by LoadUserDefaults(). 
 </summary>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.JkemMotorDef.SetAcceleration(System.Int32)">
	<summary>
 Default acceleration of the axis.  Default value is 5000.
 </summary>
	<param name="speed">Acceleration of the axis.  Range: 400 to 65500</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.JkemMotorDef.SetStartSpeed(System.Int32)">
	<summary>
 Sets the starting speed of the motor in units of steps per second.
 </summary>
	<param name="speed">Starting speed of the motor.  Range: 300 to 13,000</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.JkemMotorDef.SetSpeed(System.Double)">
	<summary>
 Sets the run speed of the axis in units of steps/second.
 </summary>
	<param name="speed">The run speed of the axis.  Range: 350 to 13,000</param>
	<remarks></remarks>
</member><member name="P:OSHA_Weighing.ModuleDefinitions.JkemMotorDef.SetAxisPosition">
	<summary>
 Overwrites the motors axis position with the value passed in this property.  Very dangereous, use with caution.
 </summary>
	<value>Current step position of the motor.</value>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.RackDef.SetRackGraphicSize(System.Int32,System.Int32)">
	<summary>
 Sets the size of the graphic that represents the plate.  Cellsize and cellseperation are set to best fit within
 the defined rectangle.  Only the width or height needs to be passed in the function.  If both are passed, the 
 rectangle size is determined by the value passed for the width.
 </summary>
	<param name="myWidth">Optimal width of the plate</param>
	<param name="myHeight">Optimal height of the plate</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.RackDef.SetRackGraphicOrigin(System.Int32,System.Int32)">
	<summary>
 Set the display origin of the graphical rack repesentation
 </summary>
	<param name="myX">X origin</param>
	<param name="myY">Y origin</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.ModuleDefinitions.RackDef.SetRackGraphicOrigin(System.Drawing.Point)">
	<summary>
 Set the display origin of the graphical rack repesentation
 </summary>
	<param name="mypoint">Rack origin</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.frmBlankPicker.SetRackGraphicOrigin(System.Int32,System.Int32)">
	<summary>
 Set the display origin of the graphical rack repesentation
 </summary>
	<param name="myX">X origin</param>
	<param name="myY">Y origin</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.frmBlankPicker.SetRackGraphicSize(System.Int32,System.Int32)">
	<summary>
 Sets the size of the graphic that represents the plate.  Cellsize and cellseperation are set to best fit within
 the defined rectangle.  Only the width or height needs to be passed in the function.  If both are passed, the 
 rectangle size is determined by the value passed for the width.
 </summary>
	<param name="myWidth">Optimal width of the plate</param>
	<param name="myHeight">Optimal height of the plate</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.HelperFunctions.EnforceLimits(System.Int32@,System.Int32,System.Int32)">
	<summary>
 Returns a value within the limits of min and max.
 </summary>
	<param name="input">The number to operate on</param>
	<param name="min">The minimum allowed value</param>
	<param name="max">The maximum allowed value</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.HelperFunctions.EnforceLimits(System.Double@,System.Double,System.Double)">
	<summary>
 Returns a value within the limits of min and max.
 </summary>
	<param name="input">The number to operate on</param>
	<param name="min">The minimum allowed value</param>
	<param name="max">The maximum allowed value</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.HelperFunctions.ExtractNumberFromString(System.String@)">
	<summary>
 Extracts the first numeric value it finds in a string including decimal point and decimals
 </summary>
	<param name="myString">String to extact the number from</param>
	<returns>The extracted number as a string</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.HelperFunctions.ClearBit(System.Int32@,System.Int32)">
	<summary>
 Clears the 0-based specified bit
 </summary>
	<param name="data">Integer to modify</param>
	<param name="bit">0 to 31</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.HelperFunctions.ExamineBit(System.Int32,System.Int32)">
	<summary>
 Examines the specified bit of an integer number
 </summary>
	<param name="data">Integer to examine</param>
	<param name="bit">0 based bit to examine</param>
	<returns>True if bit is 1, False if 0</returns>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.HelperFunctions.SetBit(System.Int32@,System.Int32)">
	<summary>
 Sets the secifed bit to 1 in the integer passed
 </summary>
	<param name="data">Interger number to operate on</param>
	<param name="bit">0 based bit to set</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.HelperFunctions.ToggleBit(System.Int32@,System.Int32)">
	<summary>
 Toggles the state of the specified bit in the referenced integer.
 </summary>
	<param name="data">Integer to operate on</param>
	<param name="bit">0 based bit to toggle</param>
	<remarks></remarks>
</member><member name="M:OSHA_Weighing.HelperFunctions.GetAcsiiCode(System.Int32,System.Boolean)">
	<summary>
 Returns the ACSII code for the keyboard key pressed.  Implemented for text keys, number keys, symbol keys.
 </summary>
	<param name="keyValue">e.keyvalue of the key pressed.</param>
	<param name="shiftSet">State of the ShiftKey.  Does not check for Cap Lock</param>
	<returns>Ascii value of the key.   0 if the key is not defined.</returns>
	<remarks></remarks>
</member><member name="P:OSHA_Weighing.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:OSHA_Weighing.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:OSHA_Weighing.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>